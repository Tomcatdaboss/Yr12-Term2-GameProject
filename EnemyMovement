using System;
using System.Collections;
using System.Collections.Generic;
using System.Data.SqlTypes;
using System.IO.Compression;
using System.Net.Sockets;
using TMPro;
using Unity.VisualScripting;
using UnityEngine;

public class EnemyMovement : MonoBehaviour
{
    public Transform player;
    private bool already_attacked = false;
    private bool player_found = false;
    private bool at_position = false;
    public Animator animator;
    public Animator leg_anim_1;
    public Animator leg_anim_2;
    public Animator leg_anim_3;
    public Animator leg_anim_4;
    public double timer = -10;
    private float new_x;
    private float new_z;
    public int minimum_distance;
    bool is_moving = true;

    // Start is called before the first frame update
    void Start()
    {
    }

    // Update is called once per frame
    void Update()
    {
        timer -= 0.01;
        if(timer <= 0 && player_found == false){
            timer = 10;
            new_x = transform.position.x + UnityEngine.Random.Range(-10,10);
            new_z = transform.position.z + UnityEngine.Random.Range(-10,10);
            at_position = false;
        }
        if (player_found == false && at_position == false){
            Debug.Log(new_x);
            Vector3 moveto = new Vector3 (new_x, transform.position.y, new_z);
            transform.LookAt(moveto);
            float current_distance = Vector3.Distance(transform.position, moveto);
		    if(current_distance > 2){
			    transform.position += transform.forward * 10 * Time.deltaTime;
                is_moving = true;	
            } else {
                at_position = true;
                is_moving = false;
            }
        }
        leg_anim_1.SetBool("IsMoving", is_moving);
        leg_anim_2.SetBool("IsMoving", is_moving);
        leg_anim_3.SetBool("IsMoving", is_moving);
        leg_anim_4.SetBool("IsMoving", is_moving);
              
    }
    void OnTriggerStay(Collider collider){
        float distance = Vector3.Distance(transform.position,player.position);
        if(collider.gameObject.tag == "Player"){
            player_found = true;
            is_moving = true;
            Vector3 nony_player = new Vector3(player.position.x, transform.position.y, player.position.z);
		    transform.LookAt(nony_player);
		    if(distance > minimum_distance)	
			    transform.position += transform.forward * 10 * Time.deltaTime;	
            else{
                is_moving = false;
            }
            }
            if(distance < 5){
                animator.SetBool("InAttackRange", true);
                if(animator.GetCurrentAnimatorStateInfo(0).IsName("EnemyAttack") && already_attacked == false){
                player.GetComponent<Hud>().health -= 10;
                already_attacked = true;
                } else if (animator.GetCurrentAnimatorStateInfo(0).IsName("Idle")){
                    already_attacked = false;
                }
                } else {
                    animator.SetBool("InAttackRange", false);
                }
    }
    void OnTriggerExit(Collider collider){
        if (collider.gameObject.tag == "Player"){
            player_found = false;
            is_moving = false;
        }
    }
}


 

